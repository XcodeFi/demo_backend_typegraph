# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CartItemInput {
  product_id: ObjectId
  quantity: Float!
  urlSlug: String
}

"""Cart item Schema"""
type CartItemSchema {
  product: ProductSchema
  quantity: Float
}

"""Cart Schema"""
type CartSchema {
  items: [CartItemSchema!]
  note: String
  payment_method: PaymentMethodSchema
  shipping_address: ShippingAdressSchema
  shipping_time: ShippingTimeSchema
}

input CreateCartItemInput {
  cart_id: String
  cart_items: CartItemInput!
}

input CreateProductInput {
  basePrice: Float!
  categoryId: Float!
  description: String!
  files: [Upload!]!
  name: String!
  price: Float!
  quantity: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  """Add products into the shopping cart"""
  addProductsToCart(input: CreateCartItemInput!): [CartItemSchema!]!

  """Create a guest cart return a randomly-generated cart ID"""
  createEmptyCart: String!

  """create a new product"""
  createProduct(input: CreateProductInput!): ProductSchema!

  """
  Create a customer cart return a randomly-generated cart ID for the customer's authozation
  """
  customerCart: String!

  """delete an existing product"""
  deleteProduct(input: ProductIdInput!): Success!

  """Add shipping infor to the cart"""
  setShippingInfoOnCart(input: ShippingInput!): ShippingInfoSchema!

  """update an existing product"""
  updateProduct(input: UpdateProductInput!): ProductSchema!
}

"""Mongo object id scalar type"""
scalar ObjectId

type PaginatedProduct {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nextPage: Int!
  page: Int!
  prevPage: Int!
  results: [ProductSchema!]!
  totalCount: Int!
  totalPages: Int!
}

input PaginationArgs {
  page: Int!
  pageSize: Int!
}

input PaymentMethodInput {
  code: String!
}

type PaymentMethodSchema {
  code: String
}

input ProductIdInput {
  productId: String!
}

"""Product Schema"""
type ProductSchema {
  categoryId: Float
  createdAt: DateTime
  createdBy: UserSchema
  description: String
  imgUrls: [String!]
  likes: Float
  name: String
  price: Float
  quantity: Float
  rating: Float
  status: Float
  stock_status: Float
  urlSlug: String
}

type Query {
  """get all products"""
  allProducts(pageInfo: PaginationArgs): PaginatedProduct!

  """Use the cart query to retrieve information about a particular cart"""
  cart(cart_id: String): CartSchema!

  """get product by urlSlug or id"""
  getProduct(id: ObjectId, urlSlug: String): ProductSchema!
}

input ShippingAdressInput {
  address: String!
  name: String!
  telephone: String!
}

type ShippingAdressSchema {
  address: String
  name: String
  telephone: String
}

"""Shipping cart Schema"""
type ShippingInfoSchema {
  note: String
  payment_method: PaymentMethodSchema
  shipping_address: ShippingAdressSchema
  shipping_time: ShippingTimeSchema
}

input ShippingInput {
  cart_id: String
  note: String!
  payment_method: PaymentMethodInput
  shipping_adress: ShippingAdressInput
  shipping_time: ShippingTimeInput
}

input ShippingTimeInput {
  date: Float
  from_hour: Int
  to_hour: Int
}

type ShippingTimeSchema {
  date: DateTime
  from_hour: Int
  to_hour: Int
}

type Success {
  success: Boolean!
}

input UpdateProductInput {
  _id: ID!
  basePrice: Float!
  categoryId: Float!
  description: String!
  imgUrls: [String!]!
  name: String!
  price: Float!
  quantity: Float!
  urlSlug: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""User Schema"""
type UserSchema {
  _id: ID!
  displayName: String
  email: String
  phoneNumber: String
  profilePicUrl: String
}
